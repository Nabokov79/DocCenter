CREATE TABLE IF NOT EXISTS CONTROL_TYPES
(
    id   BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    name VARCHAR                                 NOT NULL,
    CONSTRAINT pk_typeControl PRIMARY KEY (id),
    CONSTRAINT UQ_CONTROL_TYPES UNIQUE (name)
);

CREATE TABLE IF NOT EXISTS ORGANIZATIONS
(
    id   BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    name VARCHAR                                 NOT NULL,
    CONSTRAINT pk_organization PRIMARY KEY (id),
    CONSTRAINT UQ_ORGANIZATIONS UNIQUE (name)
);

CREATE TABLE IF NOT EXISTS MANUFACTURERS
(
    id   BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    name VARCHAR                                 NOT NULL,
    CONSTRAINT pk_manufacturer PRIMARY KEY (id),
    CONSTRAINT UQ_MANUFACTURERS UNIQUE (name)
);

CREATE TABLE IF NOT EXISTS OWNERS
(
    id   BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    name VARCHAR                                 NOT NULL,
    CONSTRAINT pk_owner PRIMARY KEY (id),
    CONSTRAINT UQ_OWNERS UNIQUE (name)
);


CREATE TABLE IF NOT EXISTS USERS
(
    id             BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    name           VARCHAR                                 NOT NULL,
    patronymic     VARCHAR                                 NOT NULL,
    surname        VARCHAR                                 NOT NULL,
    post           VARCHAR                                 NOT NULL,
    service_number INTEGER                                 NOT NULL,
    CONSTRAINT pk_user PRIMARY KEY (id),
    CONSTRAINT UQ_USERS UNIQUE (service_number)
);

CREATE TABLE IF NOT EXISTS CERTIFICATES
(
    id              BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    number          VARCHAR                                 NOT NULL,
    control_type_id BIGINT                                  NOT NULL,
    level           VARCHAR                                 NOT NULL,
    start_date      DATE                                    NOT NULL,
    end_date        DATE                                    NOT NULL,
    points          VARCHAR,
    organization_id BIGINT                                  NOT NULL,
    user_id         BIGINT                                  NOT NULL,
    CONSTRAINT pk_certificate PRIMARY KEY (id),
    CONSTRAINT UQ_CERTIFICATES UNIQUE (control_type_id, user_id),
    CONSTRAINT FK_CERTIFICATE_ON_CONTROL_TYPES FOREIGN KEY (control_type_id) REFERENCES control_types (id),
    CONSTRAINT FK_CERTIFICATE_ON_ORGANIZATION FOREIGN KEY (organization_id) REFERENCES organizations (id),
    CONSTRAINT FK_CERTIFICATE_ON_USERS FOREIGN KEY (user_id) REFERENCES users (id)
);

CREATE TABLE IF NOT EXISTS MEASURING_TOOLS
(
    id                     BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    name                   VARCHAR                                 NOT NULL,
    model                  VARCHAR                                 NOT NULL,
    work_number            INTEGER,
    purpose                VARCHAR,
    manufacturing          DATE,
    exploitation           DATE,
    manufacturer_id        BIGINT,
    measuring_range        VARCHAR,
    characteristics        VARCHAR,
    owner_id               BIGINT                                  NOT NULL,
    verification_date      DATE,
    next_verification_date DATE,
    organization_id        BIGINT,
    certificate_number     VARCHAR,
    registry               VARCHAR,
    note                   VARCHAR,
    control_type_id        BIGINT                                  NOT NULL,
    user_id                BIGINT,
    CONSTRAINT pk_measuringTool PRIMARY KEY (id),
    CONSTRAINT UQ_MEASURING_TOOL UNIQUE (name, model, work_number),
    CONSTRAINT FK_MEASURING_TOOL_ON_MANUFACTURERS FOREIGN KEY (manufacturer_id) REFERENCES manufacturers (id),
    CONSTRAINT FK_MEASURING_TOOL_ON_OWNERS FOREIGN KEY (owner_id) REFERENCES owners (id),
    CONSTRAINT FK_MEASURING_TOOL_ON_ORGANIZATION FOREIGN KEY (organization_id) REFERENCES organizations (id),
    CONSTRAINT FK_MEASURING_TOOL_ON_CONTROL_TYPES FOREIGN KEY (control_type_id) REFERENCES control_types (id),
    CONSTRAINT FK_MEASURING_TOOL_ON_USERS FOREIGN KEY (user_id) REFERENCES users (id)
);

CREATE TABLE IF NOT EXISTS AUTHORS
(
    id   BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    name VARCHAR                                 NOT NULL,
    CONSTRAINT pk_author PRIMARY KEY (id),
    CONSTRAINT UQ_AUTHORS UNIQUE (name)
);

CREATE TABLE IF NOT EXISTS MOUNTINGS
(
    id   BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    name VARCHAR                                 NOT NULL,
    CONSTRAINT pk_mounting PRIMARY KEY (id),
    CONSTRAINT UQ_MOUNTINGS UNIQUE (name)
);

CREATE TABLE IF NOT EXISTS DOCUMENTATIONS
(
    id              BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    type_object     VARCHAR                                 NOT NULL,
    type_document   BIGINT                                  NOT NULL,
    number_document VARCHAR                                 NOT NULL,
    title           VARCHAR,
    CONSTRAINT pk_documentation PRIMARY KEY (id),
    CONSTRAINT UQ_DOCUMENTATIONS UNIQUE (type_object, type_document, number_document)
);

CREATE TABLE IF NOT EXISTS TYPE_BUILDINGS
(
    id   BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    name VARCHAR                                 NOT NULL,
    CONSTRAINT pk_typeBuilding PRIMARY KEY (id),
    CONSTRAINT UQ_TYPE_BUILDINGS UNIQUE (name)
);

CREATE TABLE IF NOT EXISTS CITY
(
    id   BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    name VARCHAR                                 NOT NULL,
    CONSTRAINT pk_city PRIMARY KEY (id),
    CONSTRAINT UQ_CITY UNIQUE (name)
);

CREATE TABLE IF NOT EXISTS ADDRESSES
(
    id               BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    city_id          BIGINT                                  NOT NULL,
    type_building_id BIGINT                                  NOT NULL,
    login            VARCHAR,
    street           VARCHAR                                 NOT NULL,
    house_number     INTEGER                                 NOT NULL,
    building_number  INTEGER,
    letter           VARCHAR,
    CONSTRAINT pk_address PRIMARY KEY (id),
    CONSTRAINT UQ_ADDRESSES UNIQUE (city_id, street, house_number),
    CONSTRAINT FK_ADDRESSES_ON_CITY FOREIGN KEY (city_id) REFERENCES city (id),
    CONSTRAINT FK_ADDRESSES_ON_TYPE_BUILDINGS FOREIGN KEY (type_building_id) REFERENCES type_buildings (id)
);

CREATE TABLE IF NOT EXISTS SURVEYS
(
    id              BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    date            DATE                                    NOT NULL,
    survey          VARCHAR                                 NOT NULL,
    number          VARCHAR                                 NOT NULL,
    organization_id BIGINT                                  NOT NULL,
    CONSTRAINT pk_survey PRIMARY KEY (id),
    CONSTRAINT UQ_SURVEYS UNIQUE (date, survey, number, organization_id),
    CONSTRAINT FK_SURVEYS_ON_ORGANIZATIONS FOREIGN KEY (organization_id) REFERENCES organizations (id)
);

CREATE TABLE IF NOT EXISTS REPAIRS
(
    id              BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    date            DATE,
    description     VARCHAR,
    organization_id BIGINT,
    CONSTRAINT pk_repair PRIMARY KEY (id),
    CONSTRAINT UQ_REPAIRS UNIQUE (date, description, organization_id),
    CONSTRAINT FK_REPAIRS_ON_ORGANIZATIONS FOREIGN KEY (organization_id) REFERENCES organizations (id)
);

CREATE TABLE IF NOT EXISTS TANK_PARAMETERS
(
    id          BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    type_tank   VARCHAR                                 NOT NULL,
    orientation VARCHAR                                 NOT NULL,
    volume      INTEGER                                 NOT NULL,
    CONSTRAINT pk_tankParameters PRIMARY KEY (id),
    CONSTRAINT UQ_TANK_PARAMETERS UNIQUE (type_tank, orientation, volume)
);

CREATE TABLE IF NOT EXISTS BELTS
(
    id                 BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    number             INTEGER                                 NOT NULL,
    thickness          INTEGER                                 NOT NULL,
    norm               FLOAT                                   NOT NULL,
    tank_parameters_id BIGINT                                  NOT NULL,
    CONSTRAINT pk_belt PRIMARY KEY (id),
    CONSTRAINT FK_BELTS_ON_TANK_PARAMETERS FOREIGN KEY (tank_parameters_id) REFERENCES tank_parameters (id)
);

CREATE TABLE IF NOT EXISTS BOTTOMS
(
    id                 BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    number_bottom      INTEGER                                 NOT NULL,
    thickness_bottom   INTEGER                                 NOT NULL,
    norm_bottom        FLOAT                                   NOT NULL,
    thickness_edge     INTEGER                                 NOT NULL,
    norm_edge          FLOAT                                   NOT NULL,
    tank_parameters_id BIGINT                                  NOT NULL,
    CONSTRAINT pk_bottom PRIMARY KEY (id),
    CONSTRAINT FK_BOTTOMS_ON_TANK_PARAMETERS FOREIGN KEY (tank_parameters_id) REFERENCES tank_parameters (id)
);

CREATE TABLE IF NOT EXISTS DIMENSIONS
(
    id               BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    height_or_length INTEGER                                 NOT NULL,
    diameter         INTEGER                                 NOT NULL,
    volume           INTEGER                                 NOT NULL,
    CONSTRAINT pk_dimension PRIMARY KEY (id),
    CONSTRAINT UQ_DIMENSIONS UNIQUE (height_or_length, diameter, volume)
);

CREATE TABLE IF NOT EXISTS PROTECTIONS
(
    id               BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    name             VARCHAR                                 NOT NULL,
    date             DATE,
    documentation_id BIGINT,
    CONSTRAINT pk_protection PRIMARY KEY (id),
    CONSTRAINT UQ_PROTECTIONS UNIQUE (name, documentation_id),
    CONSTRAINT FK_PROTECTIONS_ON_DOCUMENTATIONS FOREIGN KEY (documentation_id) REFERENCES documentations (id)
);

CREATE TABLE IF NOT EXISTS TANK_PASSPORTS
(
    id                 BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    tank_number        INTEGER                                 NOT NULL,
    tank_parameters_id BIGINT                                  NOT NULL,
    author_id          BIGINT,
    project_number     VARCHAR,
    manufacturer_id    BIGINT,
    mounting_id        BIGINT,
    installation       DATE,
    operation          DATE,
    start_passport     DATE,
    dimensions_id      BIGINT,
    height_pipe        INTEGER,
    protections_id     BIGINT,
    address_id         BIGINT                                  NOT NULL,
    CONSTRAINT pk_tank_passport PRIMARY KEY (id),
    CONSTRAINT UQ_TANK_PASSPORTS UNIQUE (tank_number, tank_parameters_id, address_id),
    CONSTRAINT FK_TANK_PASSPORTS_ON_AUTHORS FOREIGN KEY (author_id) REFERENCES authors (id),
    CONSTRAINT FK_TANK_PASSPORTS_ON_MANUFACTURERS FOREIGN KEY (manufacturer_id) REFERENCES manufacturers (id),
    CONSTRAINT FK_TANK_PASSPORTS_ON_MOUNTINGS FOREIGN KEY (mounting_id) REFERENCES mountings (id),
    CONSTRAINT FK_TANK_PASSPORT_ON_DIMENSIONS FOREIGN KEY (dimensions_id) REFERENCES dimensions (id),
    CONSTRAINT FK_TANK_PASSPORT_ON_PROTECTIONS FOREIGN KEY (protections_id) REFERENCES protections (id),
    CONSTRAINT FK_TANK_PASSPORT_ON_ADDRESSES FOREIGN KEY (address_id) REFERENCES addresses (id)
);

CREATE TABLE IF NOT EXISTS TANK_PASSPORTS_BELTS
(
    tank_passport_id BIGINT,
    belt_id          BIGINT,
    CONSTRAINT pk_tank_passport_of_belts PRIMARY KEY (tank_passport_id, belt_id)
);

CREATE TABLE IF NOT EXISTS TANK_PASSPORTS_BOTTOMS
(
    tank_passport_id BIGINT,
    bottom_id        BIGINT,
    CONSTRAINT pk_tank_passport_of_bottoms PRIMARY KEY (tank_passport_id, bottom_id)
);

CREATE TABLE IF NOT EXISTS TANK_PASSPORTS_SURVEYS
(
    tank_passport_id BIGINT,
    surveys_id       BIGINT,
    CONSTRAINT pk_tank_passport_of_surveys PRIMARY KEY (tank_passport_id, surveys_id)
);

CREATE TABLE IF NOT EXISTS TANK_PASSPORTS_REPAIRS
(
    tank_passport_id BIGINT,
    repairs_id       BIGINT,
    CONSTRAINT pk_tank_passport_of_repairs PRIMARY KEY (tank_passport_id, repairs_id)
);

CREATE TABLE IF NOT EXISTS TANK_PASSPORTS_DOCUMENTATIONS
(
    tank_passport_id  BIGINT,
    documentations_id BIGINT,
    CONSTRAINT pk_tank_passport_of_documentations PRIMARY KEY (tank_passport_id, documentations_id)
);


CREATE TABLE IF NOT EXISTS PURPOSE_PIPELINES
(
    id   BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    name VARCHAR                                 NOT NULL,
    CONSTRAINT pk_purposePipeline PRIMARY KEY (id),
    CONSTRAINT UQ_PURPOSE_PIPELINES UNIQUE (name)
);

CREATE TABLE IF NOT EXISTS STANDARD_NORM_PIPES
(
    id                  BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    purpose_pipeline_id BIGINT                                  NOT NULL,
    diameter            INTEGER                                 NOT NULL,
    thickness           FLOAT                                   NOT NULL,
    min                 FLOAT                                   NOT NULL,
    CONSTRAINT pk_standardNormPipe PRIMARY KEY (id),
    CONSTRAINT UQ_STANDARD_NORM_PIPES UNIQUE (purpose_pipeline_id, diameter, thickness),
    CONSTRAINT FK_STANDARD_NORM_PIPES_ON_PURPOSE_PIPELINES FOREIGN KEY (purpose_pipeline_id) REFERENCES purpose_pipelines (id)
);

CREATE TABLE IF NOT EXISTS PIPELINE_PASSPORTS
(
    id                  BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    purpose_pipeline_id BIGINT                                  NOT NULL,
    author_id           BIGINT,
    project_number      VARCHAR,
    manufacturer_id     BIGINT,
    mounting_id         BIGINT,
    installation        DATE,
    operation           DATE,
    start_passport      DATE,
    address_id          BIGINT                                  NOT NULL,
    location            VARCHAR,
    CONSTRAINT pk_pipelinePassport PRIMARY KEY (id),
    CONSTRAINT FK_PIPELINE_PASSPORT_ON_PURPOSE_PIPELINES FOREIGN KEY (purpose_pipeline_id) REFERENCES purpose_pipelines (id),
    CONSTRAINT FK_PIPELINE_PASSPORTS_ON_AUTHORS FOREIGN KEY (author_id) REFERENCES authors (id),
    CONSTRAINT FK_PIPELINE_PASSPORT_ON_MANUFACTURERS FOREIGN KEY (manufacturer_id) REFERENCES manufacturers (id),
    CONSTRAINT FK_PIPELINE_PASSPORT_ON_MOUNTINGS FOREIGN KEY (mounting_id) REFERENCES mountings (id),
    CONSTRAINT FK_PIPELINE_PASSPORT_ON_ADDRESSES FOREIGN KEY (address_id) REFERENCES addresses (id)
);

CREATE TABLE IF NOT EXISTS PIPELINE_PASSPORTS_REPAIRS
(
    pipeline_passport_id BIGINT,
    repairs_id           BIGINT,
    CONSTRAINT pk_pipeline_passport_of_repairs PRIMARY KEY (pipeline_passport_id, repairs_id)
);

CREATE TABLE IF NOT EXISTS PIPELINE_PASSPORTS_SURVEYS
(
    pipeline_passport_id BIGINT,
    surveys_id           BIGINT,
    CONSTRAINT pk_pipeline_passport_of_surveys PRIMARY KEY (pipeline_passport_id, surveys_id)
);

CREATE TABLE IF NOT EXISTS PIPELINE_PASSPORTS_DOCUMENTATIONS
(
    pipeline_passport_id BIGINT,
    documentations_id    BIGINT,
    CONSTRAINT pk_pipeline_passport_of_documentations PRIMARY KEY (pipeline_passport_id, documentations_id)
);

CREATE TABLE IF NOT EXISTS PIPELINE_PASSPORTS_STANDARD_NORM_PIPES
(
    pipeline_passport_id  BIGINT,
    standard_norm_pipe_id BIGINT,
    CONSTRAINT pk_pipeline_passport_of_standard_norm_pipes PRIMARY KEY (pipeline_passport_id, standard_norm_pipe_id)
);

CREATE TABLE IF NOT EXISTS OIL_PIPELINE_PASSPORTS
(
    id                  BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    purpose_pipeline_id BIGINT                                  NOT NULL,
    author_id           BIGINT,
    project_number      VARCHAR,
    manufacturer_id     BIGINT,
    mounting_id         BIGINT,
    installation        DATE,
    operation           DATE,
    start_passport      DATE,
    direct_pressure     VARCHAR,
    direct_temperature  VARCHAR,
    back_pressure       VARCHAR,
    back_temperature    VARCHAR,
    temperature         VARCHAR,
    address_id          BIGINT                                  NOT NULL,
    CONSTRAINT pk_oilPipelinePassport PRIMARY KEY (id),
    CONSTRAINT FK_OIL_PIPELINE_PASSPORT_ON_PURPOSE_PIPELINES FOREIGN KEY (purpose_pipeline_id) REFERENCES purpose_pipelines (id),
    CONSTRAINT FK_OIL_PIPELINE_PASSPORT_ON_AUTHORS FOREIGN KEY (author_id) REFERENCES authors (id),
    CONSTRAINT FK_OIL_PIPELINE_PASSPORT_ON_MANUFACTURERS FOREIGN KEY (manufacturer_id) REFERENCES manufacturers (id),
    CONSTRAINT FK_OIL_PIPELINE_PASSPORT_ON_MOUNTINGS FOREIGN KEY (mounting_id) REFERENCES mountings (id),
    CONSTRAINT FK_OIL_PIPELINE_PASSPORT_ON_ADDRESSES FOREIGN KEY (address_id) REFERENCES addresses (id)
);

CREATE TABLE IF NOT EXISTS OIL_PIPELINE_PASSPORTS_STANDARD_NORM_PIPES
(
    oil_pipeline_passport_id BIGINT,
    standard_norm_pipe_id    BIGINT,
    CONSTRAINT pk_oil_pipeline_passport_of_standard_norm_pipes PRIMARY KEY (oil_pipeline_passport_id, standard_norm_pipe_id)
);


CREATE TABLE IF NOT EXISTS Oil_PIPELINE_PASSPORTS_REPAIRS
(
    oil_pipeline_passport_id BIGINT,
    repairs_id               BIGINT,
    CONSTRAINT pk_oilPipelinePassport_of_repairs PRIMARY KEY (oil_pipeline_passport_id, repairs_id)
);

CREATE TABLE IF NOT EXISTS Oil_PIPELINE_PASSPORTS_SURVEYS
(
    oil_pipeline_passport_id BIGINT,
    surveys_id               BIGINT,
    CONSTRAINT pk_oilPipelinePassport_of_surveys PRIMARY KEY (oil_pipeline_passport_id, surveys_id)
);

CREATE TABLE IF NOT EXISTS OIL_PIPELINE_PASSPORTS_DOCUMENTATIONS
(
    oil_pipeline_passport_id BIGINT,
    documentations_id        BIGINT,
    CONSTRAINT pk_oil_pipeline_passport_of_documentations PRIMARY KEY (oil_pipeline_passport_id, documentations_id)
);

CREATE TABLE IF NOT EXISTS FILTERS
(
    id    BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    type  VARCHAR                                 NOT NULL,
    name  VARCHAR                                 NOT NULL,
    model VARCHAR,
    CONSTRAINT pk_filter PRIMARY KEY (id),
    CONSTRAINT UQ_FILTERS UNIQUE (type, name, model)
);

CREATE TABLE IF NOT EXISTS FILTER_PASSPORTS
(
    id              BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    filter_id       BIGINT                                  NOT NULL,
    number_filter   INTEGER                                 NOT NULL,
    author_id       BIGINT,
    project_number  VARCHAR,
    manufacturer_id BIGINT,
    mounting_id     BIGINT,
    installation    DATE,
    estimated_life  INTEGER,
    operation       DATE,
    volume          INTEGER,
    start_passport  DATE,
    dimensions_id   BIGINT,
    orientation     VARCHAR                                 NOT NULL,
    pressure        INTEGER,
    address_id      BIGINT                                  NOT NULL,
    CONSTRAINT pk_filterPassport PRIMARY KEY (id),
    CONSTRAINT FK_FILTER_PASSPORT_ON_FILTERS FOREIGN KEY (filter_id) REFERENCES filters (id),
    CONSTRAINT FK_FILTER_PASSPORT_ON_AUTHORS FOREIGN KEY (author_id) REFERENCES authors (id),
    CONSTRAINT FK_FILTER_PASSPORT_ON_MANUFACTURERS FOREIGN KEY (manufacturer_id) REFERENCES manufacturers (id),
    CONSTRAINT FK_FILTER_PASSPORT_ON_MOUNTINGS FOREIGN KEY (mounting_id) REFERENCES mountings (id),
    CONSTRAINT FK_FILTER_PASSPORT_ON_DIMENSIONS FOREIGN KEY (dimensions_id) REFERENCES dimensions (id),
    CONSTRAINT FK_FILTER_PASSPORT_ON_ADDRESSES FOREIGN KEY (address_id) REFERENCES addresses (id)
);

CREATE TABLE IF NOT EXISTS FILTER_PASSPORTS_REPAIRS
(
    filter_passport_id BIGINT,
    repairs_id         BIGINT,
    CONSTRAINT pk_filter_passport_of_repairs PRIMARY KEY (filter_passport_id, repairs_id)
);

CREATE TABLE IF NOT EXISTS FILTER_PASSPORTS_SURVEYS
(
    filter_passport_id BIGINT,
    surveys_id         BIGINT,
    CONSTRAINT pk_filter_passport_of_surveys PRIMARY KEY (filter_passport_id, surveys_id)
);

CREATE TABLE IF NOT EXISTS FILTER_PASSPORTS_DOCUMENTATIONS
(
    filter_passport_id BIGINT,
    documentations_id  BIGINT,
    CONSTRAINT pk_filter_passport_of_documentations PRIMARY KEY (filter_passport_id, documentations_id)
);

CREATE TABLE IF NOT EXISTS BOILERS
(
    id     BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    number INTEGER                                 NOT NULL,
    type   VARCHAR                                 NOT NULL,
    model  VARCHAR                                 NOT NULL,
    CONSTRAINT pk_boiler PRIMARY KEY (id),
    CONSTRAINT UQ_BOILERS UNIQUE (number, type, model)
);

CREATE TABLE IF NOT EXISTS BOILER_PASSPORTS
(
    id              BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    boiler_id       BIGINT                                  NOT NULL,
    author_id       BIGINT,
    project_number  VARCHAR,
    manufacturer_id BIGINT,
    mounting_id     BIGINT,
    operation       DATE,
    start_passport  DATE,
    address_id      BIGINT                                  NOT NULL,
    CONSTRAINT pk_boilerPassport PRIMARY KEY (id),
    CONSTRAINT UQ_BOILER_PASSPORTS UNIQUE (boiler_id, address_id),
    CONSTRAINT FK_BOILER_PASSPORT_ON_BOILERS FOREIGN KEY (boiler_id) REFERENCES boilers (id),
    CONSTRAINT FK_BOILER_PASSPORT_ON_AUTHORS FOREIGN KEY (author_id) REFERENCES authors (id),
    CONSTRAINT FK_BOILER_PASSPORT_ON_MANUFACTURERS FOREIGN KEY (manufacturer_id) REFERENCES manufacturers (id),
    CONSTRAINT FK_BOILER_PASSPORT_ON_MOUNTINGS FOREIGN KEY (mounting_id) REFERENCES mountings (id),
    CONSTRAINT FK_BOILER_PASSPORT_ON_ADDRESSES FOREIGN KEY (address_id) REFERENCES addresses (id)
);

CREATE TABLE IF NOT EXISTS BOILER_PASSPORTS_REPAIRS
(
    boiler_passport_id BIGINT,
    repairs_id         BIGINT,
    CONSTRAINT pk_boiler_passport_of_repairs PRIMARY KEY (boiler_passport_id, repairs_id)
);

CREATE TABLE IF NOT EXISTS BOILER_PASSPORTS_SURVEYS
(
    boiler_passport_id BIGINT,
    surveys_id         BIGINT,
    CONSTRAINT pk_boiler_passport_of_surveys PRIMARY KEY (boiler_passport_id, surveys_id)
);

CREATE TABLE IF NOT EXISTS BOILER_PASSPORTS_DOCUMENTATIONS
(
    boiler_passport_id BIGINT,
    documentations_id  BIGINT,
    CONSTRAINT pk_boiler_passport_of_documentations PRIMARY KEY (boiler_passport_id, documentations_id)
);

CREATE TABLE IF NOT EXISTS LICENSES
(
    id              BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    organization_id BIGINT                                  NOT NULL,
    number          VARCHAR                                 NOT NULL,
    date            DATE                                    NOT NULL,
    CONSTRAINT pk_license PRIMARY KEY (id),
    CONSTRAINT UQ_LICENSES UNIQUE (date),
    CONSTRAINT FK_LICENSES_ON_ORGANIZATIONS FOREIGN KEY (organization_id) REFERENCES organizations (id)
);

CREATE TABLE IF NOT EXISTS DIVISIONS
(
    id              BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    organization_id BIGINT                                  NOT NULL,
    branch          VARCHAR                                 NOT NULL,
    index           INTEGER                                 NOT NULL,
    city_id         BIGINT                                  NOT NULL,
    license_id      BIGINT                                  NOT NULL,
    CONSTRAINT pk_division PRIMARY KEY (id),
    CONSTRAINT UQ_DIVISIONS UNIQUE (license_id,branch),
    CONSTRAINT FK_DIVISIONS_ON_ORGANIZATIONS FOREIGN KEY (organization_id) REFERENCES organizations (id),
    CONSTRAINT FK_DIVISIONS_ON_CITY FOREIGN KEY (city_id) REFERENCES city (id)
);